@page "/inventoryreport"

@rendermode InteractiveServer

@inject ISearchInventoryTransactionsUseCase SearchInventoryTransactionUseCase

<h3>Inventory Transactions</h3>
<br />

<div class="row">
	<div class="col">
		<label for="inv">Inventory Name</label>
		<input type="text" id="inv" class="form-control" @bind-value="invName" />"
	</div>
	<div class="col">
		<label for="df">Date From</label>
		<input type="date" id="df" class="form-control" @bind-value="dateFrom" />
	</div>
	<div class="col">
		<label for="dt">Date To</label>
		<input type="date" id="dt" class="form-control" @bind-value="dateTo" />
	</div>
	<div class="col">
		<label for="at">Activity Type</label>
		<select id="at" class="form-control" @bind="activityTypeId">
			<option value="0"></option>
			<option value="1">Purchase Inventory</option>
			<option value="2">Produce Product</option>
		</select>
	</div>
	<div class="col">
		<label>&nbsp;</label>
		<button type="button" class="btn btn-primary form-control" @onclick="SearchInventories">Search</button>
	</div>
</div>

@if(inventoryTransactions != null && inventoryTransactions.Any())
{
	<table class="table">
		<thead>
			<tr>
				<th>Date</th>
				<th>Inventory</th>
				<th>Activity</th>
				<th>Quantity Before</th>
				<th>Quantity After</th>
				<th>Unit Price</th>
				<th>PO#</th>
				<th>Production #</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var transaction in inventoryTransactions)
			{
				<tr>
					<td>@transaction.TransactionDate.ToString("MM/dd/yyyy")</td>
					<td>@transaction.Inventory.InventoryName</td>
					<td>
						@if(transaction.ActivityType == InventoryTransactionType.PurchaseInventory)
						{
							<text>Purchase Inventory</text>
						}
						else if(transaction.ActivityType == InventoryTransactionType.ProduceProduct)
						{
							<text>Produce Product</text>
						}
					</td>
					<td>@transaction.QuantityBefore</td>
					<td>@transaction.QuantityAfter</td>
                    <td>@transaction.UnitPrice.ToString("c")</td>
					<td>@transaction.PONumber</td>
					<td>@transaction.ProductionNumber</td>
				</tr>
			}
		</tbody>
	</table>
}


@code {
	private string invName;
	private DateTime? dateFrom;
	private DateTime? dateTo;
	private int activityTypeId;
	private IEnumerable<InventoryTransaction>? inventoryTransactions;

	private async Task SearchInventories()
	{
		InventoryTransactionType? invType = null;
		if (activityTypeId != 0) invType = (InventoryTransactionType)activityTypeId;
		
		inventoryTransactions = await SearchInventoryTransactionUseCase.ExecuteAsync(invName, dateFrom, dateTo, invType);
	}

}
