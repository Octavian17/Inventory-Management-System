@page "/addProduct"

@rendermode InteractiveServer

@inject IAddProductUseCase addProductUseCase
@inject NavigationManager navigationManager

<h3>AddProduct</h3>
<br />

<EditForm Model="product" OnValidSubmit="Save">

	<DataAnnotationsValidator></DataAnnotationsValidator>
	<ValidationSummary></ValidationSummary>

	<div class="form-group">
		<label for="name">Product Name</label>
		<InputText id="name" class="form-control" @bind-Value="product.ProductName" />
		<ValidationMessage For="@(() => product.ProductName)"></ValidationMessage>
	</div>

	<div class="form-group">
		<label for="quantity">Product Quantity</label>
		<InputNumber id="quantity" class="form-control" @bind-Value="product.Quantity" />
		<ValidationMessage For="@(() => product.Quantity)"></ValidationMessage>
	</div>

	<div class="form-group">
		<label for="price">Product Price</label>
		<InputNumber id="price" class="form-control" @bind-Value="product.Price" />
		<ValidationMessage For="@(() => product.Price)"></ValidationMessage>
	</div>

	<br />

	<button type="submit" class="btn btn-primary">Save</button>
	&nbsp;
	<a href="/products" class="btn btn-primary">Cancel</a>

</EditForm>

@code { 

	private Product product { get; set; } = new Product();	


	private async Task Save()
	{
		await addProductUseCase.ExecuteAsync(product);

		navigationManager.NavigateTo("/products");
	}
}
